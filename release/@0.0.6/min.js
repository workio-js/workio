var U=Object.defineProperty,s=(e,t)=>()=>(e&&(t=e(e=0)),t),n=(e,t)=>{for(var o in t)U(e,o,{get:t[o],enumerable:!0})},u={};n(u,{runtimeKey:()=>p});var p,l=s(()=>{p=globalThis?.process?.release?.name==="node"?"node":globalThis?.Deno!==void 0?"deno":globalThis?.Bun!==void 0?"bun":globalThis?.fastly!==void 0?"fastly":globalThis?.__lagon__!==void 0?"lagon":globalThis?.WebSocketPair instanceof Function?"workerd":globalThis?.EdgeRuntime instanceof String?"edge-light":"other"}),v={};n(v,{scriptURL:()=>O});function O(e){return h==="node"?e:URL.createObjectURL(new Blob([e],{type:"application/javascript"}))}var h,g=s(async()=>{({runtimeKey:h}=await Promise.resolve().then(()=>(l(),u)))}),m={};n(m,{TaskPool:()=>w});var w,f=s(()=>{w=class{constructor(){this.pool={},this.nextId=0,this.vacantId=[],this.reservedResponse=[]}push({resolve:e,reject:t}){let o=null;return this.vacantId.length?(o=this.vacantId[0],this.vacantId.shift()):(o=this.nextId,this.nextId++),this.pool[o]={resolve:e,reject:t},o}setResponse({taskId:e,returnValue:t}){this.pool[e].resolve(t),this.taskGC({taskId:e})}rejectResponse({taskId:e}){this.pool[e].reject("Method not found"),this.taskGC({taskId:e})}taskGC({taskId:e}){this.pool[e]=void 0,e+1===this.nextId?this.nextId--:this.vacantId.push(e)}}}),k={};n(k,{random64:()=>M});function M(){return btoa(String.fromCharCode.apply(null,crypto.getRandomValues(new Uint8Array(64))))}var S=s(()=>{}),y={};n(y,{WorkioWorker:()=>_});var b,I,P,x,_,E=s(async()=>{({scriptURL:b}=await g().then(()=>v)),{TaskPool:I}=await Promise.resolve().then(()=>(f(),m)),{runtimeKey:P}=await Promise.resolve().then(()=>(l(),u)),{random64:x}=await Promise.resolve().then(()=>(S(),k)),_=class{constructor({workerFn:e,constructorConfig:t,workerArgs:o}){let d={},i=x(),a=new I,c=new Worker(b(`(async()=>{class i{constructor(){}}const e=globalThis;e.window=e,Object.defineProperties(e,{env:{value:Object.defineProperties({},{type:{value:"function",writable:!1},op_close:{value:new i,writable:!1}}),writable:!1}}),e.close=function(){return e.env.op_close};let o="${i}",n={};e.addEventListener("message",async({data:s})=>{if(s.workerArgs&&(Object.assign(n,await async function(){let t,r;return await(${e.toString()})(...s.workerArgs)}()),e.postMessage({pFIIndex:Object.keys(n),sudoKey:o})),"task"in s)if(s.task in n){const t=await n[s.task](...s.args);e.postMessage({sudoKey:o,returnValue:t,taskId:s.taskId,close:t===e.env.op_close})}else e.postMessage({sudoKey:o,methodNotFound:!0,taskId:s.taskId})},{passive:!0})})();
`),{type:"module",eval:!0});return c.postMessage({workerArgs:o,sudoKey:i}),c[P==="node"?"on":"addEventListener"]("message",({data:r})=>{if(r.sudoKey)switch(i){case r.sudoKey:"returnValue"in r&&(a.setResponse(r),r.close===!0&&c.terminate()),r.methodNotFound&&a.rejectResponse(r),r.pFIIndex&&Object.assign(d,r.pFIIndex)}},{passive:!0}),new Proxy(this,{get(r,j,N){return function(){return new Promise((F,L)=>{c.postMessage({task:j,args:[...arguments],taskId:a.push({resolve:F,reject:L})})})}}})}}}),R={};n(R,{WorkioFunction:()=>W});var W,A=s(async()=>{f(),await g(),l(),W=class{constructor({resolve:e,workerFn:t,workerArgs:o}){}}}),C={};n(C,{constConfig:()=>G});function G(e){return{as:"as"in e?e.as:"worker",type:"type"in e?e.type:"web",shared:"shared"in e?e.shared:void 0,immidiate:"immidiate"in e?e.immidiate:!1}}var V=s(()=>{}),{WorkioWorker:K}=await E().then(()=>y),{WorkioFunction:T}=await A().then(()=>R),{runtimeKey:z}=await Promise.resolve().then(()=>(l(),u)),{constConfig:B}=await Promise.resolve().then(()=>(V(),C)),D=class{constructor(e,t){switch(!1){case new.target:throw new Error("calling Workio constructor without new is invalid");case e instanceof Function:throw new TypeError("first argument must be a type of function");default:{let o=B(t||{});return function(...i){return new.target?new K({workerFn:e,workerArgs:i}):new Promise(a=>new T({resolve:a,workerFn:e,workerArgs:i}))}}}switch(constructorConfig.as){case"worker":return class extends K{constructor(){super({workerFn:e,constructorConfig,constructorArgs:arguments})}};case"function":return new T(e)}}static config(e){}};export{D as Workio};
