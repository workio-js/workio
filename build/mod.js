function f(t){return URL.createObjectURL(new File([t],"workioscript.js",{type:"application/javascript"}))}var c=class{constructor(){this.pool={},this.nextId=0,this.vacantId=[],this.reservedResponse=[]}newTask({resolve:e,reject:o}){let s=null;return this.vacantId.length?(s=this.vacantId[0],this.vacantId.shift()):(s=this.nextId,this.nextId++),this.pool[s]={resolve:e,reject:o},s}setResponse({taskId:e,returnValue:o}){this.pool[e].resolve(o),this.taskGC({taskId:e})}rejectResponse({taskId:e}){this.pool[e].reject("Method not found"),this.taskGC({taskId:e})}taskGC({taskId:e}){this.pool[e]=void 0,e+1===this.nextId?this.nextId--:this.vacantId.push(e)}};var a=class{constructor({workerFn:e,config:o,constructorArgs:s}){let r=new Worker(f(`(async () => {let sudo = crypto.randomUUID();self.postMessage({ sudo });self.close = function() {self.postMessage({ close: true, sudo })};const publicFunctionInterface = {};for(const index in publicFunctionInterface) {if(!(publicFunctionInterface[index] instanceof Function)) {delete publicFunctionInterface[index]}};self.addEventListener("message", async ({ data }) => {if("task" in data) {if(data.task in publicFunctionInterface) {self.postMessage({ returnValue: await publicFunctionInterface[data.task](...data.args), taskId: data.taskId, sudo })} else {self.postMessage({ methodNotFound: true, taskId: data.taskId, sudo })}}if(data.constructorArgs) {let sudo = undefined;Object.assign(publicFunctionInterface, await (${e.toString()})(data.constructorArgs))}}, { passive: true });})()`),{type:"module"}),i=new c,d=null;return r.postMessage({constructorArgs:s}),r.addEventListener("message",({data:n})=>{if(n.sudo)switch(d){case null:d=n.sudo;break;case n.sudo:if(n.close){r.terminate();return}n.returnValue&&i.setResponse(n),n.methodNotFound&&i.rejectResponse(n);break}},{passive:!0}),new Proxy(this,{get(n,m,b){return function(){return new Promise((k,I)=>{let w=i.newTask({resolve:k,reject:I});r.postMessage({task:m,args:[...arguments],taskId:w})})}}})}};var u=class{constructor(){}};var l=class{constructor(e){}};var g=globalThis?.Deno!==void 0?"deno":globalThis?.Bun!==void 0?"bun":globalThis?.fastly!==void 0?"fastly":globalThis?.__lagon__!==void 0?"lagon":globalThis?.process?.release?.name==="node"?"node":globalThis?.WebSocketPair instanceof Function?"workerd":globalThis?.EdgeRuntime instanceof String?"edge-light":"other";function h(t){let e={};t&&t.as?e.type=t.as:e.type="worker"}var p=class{constructor(e,o){if(!(e instanceof Function))throw new TypeError("workerFn is not a type of function");let s=h(o);switch(s.type){case"worker":return class extends a{constructor(...r){super({workerFn:e,constructorConfig:s,constructorArgs:r})}};case"function":return new u(e,s)}}static configure(e){}static import(e){}};g!=="other"&&Object.assign(p,{serve(t){new l(t)}});var _=new p("https://???.workers.dev",{as:"function"});export{p as Workio};